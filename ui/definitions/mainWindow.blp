/*
	Why not use LGI directly instead ?

	Because LGI doesn't support well many properties, that can be easily defined here.
	Still, both are by FAR a much better solution than using XML directly.
	Plus, I feel like using a universal standard would be a good idea to make it easier for people to contribute.
*/

using Gtk 4.0;
using Adw 1;

Adw.ApplicationWindow mainWindow {
	default-height: 500;
	default-width: 700;
	height-request: 400;
	show-menubar: true;
	width-request: 360;

	// AdwBreakpoint used to dynamically make the sidebar appear or disappear depending on the window's width.
	Adw.Breakpoint {
		condition ("max-width: 600sp")
		setters {
			sidebarToggleButton.visible: true;
			sidebarToggleButton.active: false;
			gameSettings_SplitView.collapsed: true;
		}
	}

	[content]
	Adw.ToastOverlay toastSystem { //[INTERACTS WITH LUA]
		Adw.ToolbarView topbar {
			// Header bar
			[top]
			Adw.HeaderBar {
				// Button that allows you to exit the game settings page, hidden by default and shown through Lua code when needed.
				Button backToMenu { //[MODIFIED IN LUA][INTERACTS THROUGH LUA]
					has-frame: false;
					icon-name: "go-previous-symbolic";
					visible: false;
				}

				// Button that allows you to toggle the sidebar in the game settings page.
				ToggleButton sidebarToggleButton { //[MODIFIED IN LUA][INTERACTS THROUGH LUA]
					active: true;
					visible: false;
					has-frame: false;
					icon-name: "view-sidebar-start-symbolic";
				}

				styles ["titlebar"]

				[end]
				Button aboutLauncher {
					icon-name: "open-menu-symbolic";
					styles ["image-button"]
				}
			}

			/*
				MAIN VIEW
				This is the page the program starts on when it's launched.
			*/
			Adw.NavigationView mainView {
				Adw.NavigationPage mainPage {
					ScrolledWindow {
						hscrollbar-policy: never;

						Adw.Clamp {
							margin-bottom: 16;
							margin-end: 12;
							margin-start: 12;
							margin-top: 16;

							Adw.PreferencesGroup gameList { //[MODIFIED IN LUA]
								description: _("Insert \"sst %command%\" as a game\'s launch options to enable it here.\nCommand may change depending on installation method.");
								title: _("Detected Steam games");
							}
						}
					}
				}

				// This is the page that shows up when you click on a game.
				Adw.NavigationPage gameSettings { //[INTERACTS THROUGH LUA]
					Adw.OverlaySplitView gameSettings_SplitView {
						/*
							SIDEBAR
						*/

						min-sidebar-width: 0;
						show-sidebar: bind sidebarToggleButton.active bidirectional;
						sidebar: 
						Adw.NavigationPage gameSettingsSidebar {
							child:
							Adw.ToolbarView {
								Box {
									orientation: vertical;
									vexpand: true;
									vexpand-set: true;

									// This is the header of the sidebar of the game settings page.
									Box {
										hexpand: true;
										hexpand-set: true;
										margin-bottom: 12;
										margin-end: 12;
										margin-start: 12;
										margin-top: 12;
										orientation: vertical;
										spacing: 8;
										valign: start;

										// This is the icon in the sidebar of the game settings page.
										Image gameSettingsSidebarIcon { //[MODIFIED IN LUA]
											icon-size: large;
											styles ["lowres-icon"]
										}
										// This is the title in the sidebar of the game settings page.
										Label gameSettingsSidebarLabel { //[MODIFIED IN LUA]
											justify: center;
											wrap: true;
											styles ["title-4"]
										}
									}

									// This is the list of pages in the sidebar of the game settings page.
									StackSidebar {
										vexpand: true;
										vexpand-set: true;
										stack: gameSettingsStack;
									}
								}
							};
						};
						
						/*
							OVERVIEW PAGE
						*/
						content:
						Adw.NavigationPage {
							Stack gameSettingsStack {
								transition-type: crossfade;

								//[overviewPage.blp]

								//[settingsPage.blp]

								//[utilitiesPage.blp]

								//[commandPage.blp]

								//[gamescopePage.blp]

								//[protonPage.blp]

								//[cleanerPage.blp]
							}
						};
					}
				}
			}
		}
	}
}
